#!/bin/bash

########################################
# Detect system and set variables
########################################

PROJECT=vae_sampler
BUILD_DIR=$PROJECT
PATCH_DIR="./patches"

OS=$(uname -s)

if [ $OS = "Darwin" ] ; then
	SUFFIX=~.pd_darwin
	echo "Building for macOS"
elif [ $OS = "Linux" ] ; then
	SUFFIX=~.pd_linux
	echo "Building for Linux"
else
	echo "Unsupported OS $OS"
	exit -1
fi

PRODUCT=$PROJECT$SUFFIX

########################################
# Check our dependencies directories
########################################

if [ -n $TORCH_DIR ] ; then
	if [ -d ./libtorch ] ; then
		TORCH_DIR=./libtorch
	else
		echo "Can't find libtorch directory, please set variable TORCH_DIR to the libtorch directory path"
		exit -1
	fi
fi

if [ -n $FFTW_DIR ] ; then
	if [ -d ./fftw ] ; then
		FFTW_DIR=./fftw
	else
		echo "Can't find fftw directory, please set variable FFTW_DIR to the fftw directory path"
		exit -1
	fi
fi

########################################
# Make our build directories
########################################

echo "Make build directories..."

if [ ! -d $BUILD_DIR ] ; then
	mkdir $BUILD_DIR
fi

if [ ! -d $BUILD_DIR/lib ] ; then
	mkdir $BUILD_DIR/lib
fi

########################################
# Compile the external
########################################

if [ $OS = "Darwin" ] ; then
	CC=clang
	CPP=clang++
elif [ $OS = "Linux" ] ; then
	CC=gcc
	CPP=g++
fi

SRC_C="src/vae_sampler~.c"
SRC_CPP="src/vae_util.cpp src/griffin_lim.cpp"
INCLUDE="-Isrc -I$FFTW_DIR/api -I$TORCH_DIR/include"
CFLAGS=""
CPPFLAGS="-std=c++11"
LFLAGS="-L./libtorch/lib -ltorch -lcaffe2 -lc10 -L./fftw/.libs -lfftw3f"

if [ $OS = "Darwin" ] ; then
	LFLAGS="-undefined dynamic_lookup $LFLAGS"
elif [ $OS = "Linux" ] ; then
	LFLAGS="-fPIC -Wl,-rpath,\$ORIGIN/lib $LFLAGS"
	CFLAGS="-fPIC -D_GLIBCXX_USE_CXX11_ABI=0 $CFLAGS"
	CPPFLAGS="-fPIC -D_GLIBCXX_USE_CXX11_ABI=0 $CPPFLAGS"
fi

echo "Compile c files..."
$CC $INCLUDE  $CFLAGS -o $BUILD_DIR/vae_sampler~.o -c src/vae_sampler~.c

echo "Compile cpp files..."
$CPP $INCLUDE $CPPFLAGS -o $BUILD_DIR/vae_util.o -c src/vae_util.cpp
$CPP $INCLUDE $CPPFLAGS -o $BUILD_DIR/griffin_lim.o -c src/griffin_lim.cpp

echo "Link shared object..."
$CPP -shared -o $BUILD_DIR/$PRODUCT $BUILD_DIR/vae_sampler~.o $BUILD_DIR/vae_util.o $BUILD_DIR/griffin_lim.o $LFLAGS

if [ $OS = "Darwin" ] ; then
	echo "Patch dependencies install name"
	install_name_tool -add_rpath @loader_path/lib $BUILD_DIR/$PRODUCT
fi
########################################
# Bundle the external with its dependencies and clean
########################################

echo "Bundle the external with its dependencies..."

cp "$TORCH_DIR"/lib/* "$BUILD_DIR"/lib
cp "$PATCH_DIR"/*.pd "$BUILD_DIR"/
rm "$BUILD_DIR"/*.o
